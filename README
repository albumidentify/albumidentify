albumidentify -- Tools to identify and manage music albums

Ripping new CDs
---------------
Requires:
cdrdao, cdrecord, cueconvert, bchunk, flac, libofa, pymusicbrainz2

mkdir raw flac
cd raw
ripcd.sh
cd ..; 2flac.sh
for i in flac/cd-* ; do flacnamer.py "$i" >"$i"/report.txt; done

flacnamer writes reports to the flac/cd-* directories.  To get a list of
information, run
flacreport.py flac/cd-*

Albums are identified first by CD-TOC, then by the PUID of the tracks.

If an album cannot be identified, you can add it to MusicBrainz. Run
submit.py <flac directory>
to get a URL to submit to.

Renaming existing albums (mp3 only)
-----------------------------------

renamealbum <srcpath> <destpath>

Submitting PUIDs
----------------
To submit PUIDs back to MusicBrainz and help other people rename their music
more quickly, create a file ~/.albumidentifyrc with contents:

[albumidentify]
push_shortcut_puids=True
genpuid_command=</path/to/genpuid>

[musicbrainz]
username=<your mb username>
password=<your mb password>

Custom Naming Schemes
---------------------
flacnamer supports custom renaming schemes, which are specified as a standard 
Python string expansion. The default scheme is:

%(albumartist)s - %(year)i - %(album)s/%(tracknumber)i - %(trackartist)s - %(trackname)s

See --scheme-help for a list of supported expansions.

Use --scheme to specify a custom scheme, making sure to quote appropriately.

If you specify a scheme which results in directories being created per-track,
the coverart and cd-toc will be placed in the last directory created. This
might change in the future. 

Bug reports
-----------
To submit a bug report, fork the repository, add a file to issues/ and send us
a merge request on github.
Patches welcome!

Authors:
Perry Lorrier
Scott Raynel
Alastair Porter
Matt Brown
